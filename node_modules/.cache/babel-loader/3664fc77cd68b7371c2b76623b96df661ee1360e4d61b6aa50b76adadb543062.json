{"ast":null,"code":"var _jsxFileName = \"/Users/ryes/Downloads/WH/R3F_samples/shoeInst/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport * as THREE from 'three';\nimport { useRef, useState } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { Bvh, Instances, Instance, OrbitControls, Environment, useGLTF } from '@react-three/drei';\nimport { useControls } from 'leva';\nimport { data } from './store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    range\n  } = useControls({\n    range: {\n      value: 10,\n      min: 0,\n      max: 10,\n      step: 1\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 0, 20],\n      fov: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5 * Math.PI\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      intensity: 0.3,\n      position: [5, 25, 20]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bvh, {\n      firstHitOnly: true,\n      children: /*#__PURE__*/_jsxDEV(Shoes, {\n        data: data,\n        range: range\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Environment, {\n      preset: \"city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      autoRotate: true,\n      autoRotateSpeed: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BgRhQNfRGw2I5DRxKX07lAatlh8=\", false, function () {\n  return [useControls];\n});\n_c = App;\nfunction Shoes({\n  data,\n  range\n}) {\n  _s2();\n  const {\n    nodes,\n    materials\n  } = useGLTF('/panelEdited.glb');\n  return /*#__PURE__*/_jsxDEV(Instances, {\n    range: range /* material={materials.phong1SG} geometry={nodes.Shoe.geometry} */,\n    children: data.map((props, i) => /*#__PURE__*/_jsxDEV(Shoe, {\n      ...props\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s2(Shoes, \"3EbVibAGuOW6XeBFAk0EenvHzHI=\", false, function () {\n  return [useGLTF];\n});\n_c2 = Shoes;\nfunction Shoe({\n  random,\n  /* color = new THREE.Color(), */...props\n}) {\n  _s3();\n  const ref = useRef();\n  const [hovered, setHover] = useState(false);\n  useFrame(state => {\n    const t = state.clock.getElapsedTime() + random * 10000;\n    ref.current.rotation.set(Math.cos(t / 4) / 2, Math.sin(t / 4) / 2, Math.cos(t / 1.5) / 2);\n    ref.current.position.y = Math.sin(t / 1.5) / 2;\n    ref.current.scale.x = ref.current.scale.y = ref.current.scale.z = THREE.MathUtils.lerp(ref.current.scale.z, hovered ? 1.4 : 1, 0.1);\n    /* ref.current.color.lerp(color.set(hovered ? 'red' : 'white'), hovered ? 1 : 0.1) */\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(Instance, {\n      ref: ref /*  onPointerOver={(e) => (e.stopPropagation(), setHover(true))} onPointerOut={(e) => setHover(false)} */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s3(Shoe, \"Fk3WxESn5uCf3gHtbRUKOrokIr4=\", false, function () {\n  return [useFrame];\n});\n_c3 = Shoe;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Shoes\");\n$RefreshReg$(_c3, \"Shoe\");","map":{"version":3,"names":["THREE","useRef","useState","Canvas","useFrame","Bvh","Instances","Instance","OrbitControls","Environment","useGLTF","useControls","data","jsxDEV","_jsxDEV","App","_s","range","value","min","max","step","camera","position","fov","children","intensity","Math","PI","fileName","_jsxFileName","lineNumber","columnNumber","firstHitOnly","Shoes","preset","autoRotate","autoRotateSpeed","_c","_s2","nodes","materials","map","props","i","Shoe","_c2","random","_s3","ref","hovered","setHover","state","t","clock","getElapsedTime","current","rotation","set","cos","sin","y","scale","x","z","MathUtils","lerp","_c3","$RefreshReg$"],"sources":["/Users/ryes/Downloads/WH/R3F_samples/shoeInst/src/App.js"],"sourcesContent":["import * as THREE from 'three'\nimport { useRef, useState } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { Bvh, Instances, Instance, OrbitControls, Environment, useGLTF } from '@react-three/drei'\nimport { useControls } from 'leva'\n\nimport { data } from './store'\n\nexport default function App() {\n  const { range } = useControls({ range: { value: 10, min: 0, max: 10, step: 1 } })\n  return (\n    <Canvas camera={{ position: [0, 0, 20], fov: 50 }}>\n      <ambientLight intensity={0.5 * Math.PI} />\n      <directionalLight intensity={0.3} position={[5, 25, 20]} />\n      <Bvh firstHitOnly>\n        <Shoes data={data} range={range} />\n      </Bvh>\n      <Environment preset=\"city\" />\n      <OrbitControls autoRotate autoRotateSpeed={1} />\n    </Canvas>\n  )\n}\n\nfunction Shoes({ data, range }) {\n  const { nodes, materials } = useGLTF('/panelEdited.glb')\n  return (\n    <Instances range={range} /* material={materials.phong1SG} geometry={nodes.Shoe.geometry} */>\n      {data.map((props, i) => (\n        <Shoe key={i} {...props} />\n      ))}\n    </Instances>\n  )\n}\n\nfunction Shoe({ random, /* color = new THREE.Color(), */ ...props }) {\n  const ref = useRef()\n  const [hovered, setHover] = useState(false)\n  useFrame((state) => {\n    const t = state.clock.getElapsedTime() + random * 10000\n    ref.current.rotation.set(Math.cos(t / 4) / 2, Math.sin(t / 4) / 2, Math.cos(t / 1.5) / 2)\n    ref.current.position.y = Math.sin(t / 1.5) / 2\n    ref.current.scale.x = ref.current.scale.y = ref.current.scale.z = THREE.MathUtils.lerp(ref.current.scale.z, hovered ? 1.4 : 1, 0.1)\n    /* ref.current.color.lerp(color.set(hovered ? 'red' : 'white'), hovered ? 1 : 0.1) */\n  })\n  return (\n    <group {...props}>\n      <Instance ref={ref}/*  onPointerOver={(e) => (e.stopPropagation(), setHover(true))} onPointerOut={(e) => setHover(false)} */ />\n    </group>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}